import Head from '@/jest/__mocks__/next/head'
import { CardFullScreen } from '@/views/posts-view/CardFullScreen'
import axios from 'axios'
import React from 'react'
import { QueryClient, dehydrate, useQuery } from 'react-query'
import { Character } from '..'
import { ParamsType } from '../posts/[id]'

export const getStaticPaths = async () => {
  const characters: Character = await axios.get('https://rickandmortyapi.com/api/character/').then(res => res.data)
  const paths = characters.results.map(item => ({ params: { id: item.id.toString() } }))

  return {
    paths,
    fallback: 'blocking',
  }
}

const characterSingle = async id => {
  const characters = await axios.get(`https://rickandmortyapi.com/api/character/${id}`).then(res => res.data)
  return characters
}

export const getStaticProps = async ({ params }: ParamsType) => {
  const queryC = new QueryClient()
  const idt = params.id
  await queryC.prefetchQuery(['postSingle', idt], () => characterSingle(idt))
  return {
    props: {
      dehydratedState: dehydrate(queryC),
      id: idt,
    },
  }
}

const DeteilQuery = ({ id }) => {
  const { data: character } = useQuery(['postSingle', id], () => characterSingle(id))

  return (
    <>
      <Head>
        <title></title>
        <meta name='description' content='Generated by create next app' />
      </Head>
      <CardFullScreen character={character} />
    </>
  )
}

export default DeteilQuery
